name: PR Merge Client Dev Preview

on:
  # push:
  #   branches: [main, dev]
  # pull_request:
  #   branches: [main, dev]
  pull_request_target:
    types: [closed]
    paths: 
      - "packages/client/**"

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  build-and-comment:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            path_patterns: |
              src-tauri/target/**/release/bundle/dmg/*.dmg
              src-tauri/target/**/release/bundle/macos/*.app
          - platform: windows-latest
            path_patterns: |
              packages/client/src-tauri/target/**/release/bundle/msi/*.msi
              packages/client/src-tauri/target/**/release/bundle/nsis/*.exe
          - platform: ubuntu-latest
            path_patterns: |
              packages/client/src-tauri/target/**/release/bundle/appimage/*.AppImage
              packages/client/src-tauri/target/**/release/bundle/deb/*.deb

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable

      - name: Ensure x86_64 Target is Installed
        if: matrix.target == 'x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Build Tauri
        run: |
          yarn --network-timeout 100000
          yarn build
          yarn build:client

      # 生成唯一标识
      - name: Generate Unique ID
        id: uid
        run: |
          TIMESTAMP=$(date -u +"%Y%m%dT%H%M%S")
          echo "UNIQUE_ID=$TIMESTAMP-${{ github.run_id }}" >> $GITHUB_ENV

      # 动态文件发现
      - name: Find Artifacts
        id: finder
        shell: bash
        run: |
          # 路径标准化处理
          adjusted_patterns=$(echo "${{ matrix.path_patterns }}" | tr '/' ${{ matrix.platform == 'windows-latest' && '\\' || '/' }})
          
          # 递归查找文件
          artifact_paths=()
          while IFS= read -r pattern; do
            found_files=$(find . -path "./$pattern" -type f -print 2>/dev/null | sed 's/^\.\///')
            if [ -n "$found_files" ]; then
              artifact_paths+=("$found_files")
            fi
          done <<< "$adjusted_patterns"

          # 输出结果
          echo "paths<<EOF" >> $GITHUB_OUTPUT
          printf "%s\n" "${artifact_paths[@]}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 产物上传
      - name: Upload Artifacts
        if: steps.finder.outputs.paths != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ env.UNIQUE_ID }}
          path: |
            ${{ steps.finder.outputs.paths }}
          retention-days: 7

      # PR评论生成
      - name: Create Comment
        if: |
          github.event.pull_request.merged == true &&
          steps.finder.outputs.paths != ''
        uses: actions/github-script@v7
        env:
          PLATFORM: ${{ matrix.platform }}
          RUN_ID: ${{ github.run_id }}
          ARTIFACT_NAME: ${{ matrix.platform }}-${{ env.UNIQUE_ID }}
        with:
          script: |
            const comment = `🎉 构建完成！资产已上传
            ### 平台: ${process.env.PLATFORM}
            📦 资源包名称: \`${process.env.ARTIFACT_NAME}\`
            🔗 下载地址: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.RUN_ID}/artifacts
            ⏱️ 构建时间: \`${new Date().toISOString()}\`
            
            包含以下文件：
            ${'${{ steps.finder.outputs.paths }}'.split('\n').map(p => `▫️ \`${p}\``).join('\n')}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
