name: PR Merge Client Dev Preview

on:
  pull_request_target:
    paths: 
      - "packages/client/**"
  # push:
  #   branches: [main]
  #   paths: 
  #     - "packages/client/**"

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  build-and-comment:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
            args: "--target aarch64-apple-darwin"
            path_patterns: |
              packages/client/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
              packages/client/src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: "--target x86_64-apple-darwin"
            path_patterns: |
              packages/client/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
              packages/client/src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app
          - platform: windows-latest
            path_patterns: |
              packages/client/src-tauri/target/**/release/bundle/msi/*.msi
              packages/client/src-tauri/target/**/release/bundle/nsis/*.exe
            args: "--target x86_64-pc-windows-msvc"
          - platform: ubuntu-latest
            path_patterns: |
              packages/client/src-tauri/target/**/release/bundle/appimage/*.AppImage
              packages/client/src-tauri/target/**/release/bundle/deb/*.deb
            args: "--target x86_64-unknown-linux-gnu"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable

      - name: Ensure x86_64 Target is Installed
        if: matrix.target == 'x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Build Tauri
        run: |
          yarn --network-timeout 100000
          yarn build
          yarn build:client --target ${{ matrix.target }}

      - name: Generate Unique ID
        id: uid
        run: echo "UNIQUE_ID=${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.platform }}" >> $GITHUB_ENV

      - name: Find Artifacts
        id: finder
        uses: dawidd6/action-find-files@v3
        with:
          directory: .
          patterns: |
            ${{ matrix.path_patterns }}
          find_options: "-type f"
          separator: "\n"
        env:
          # Windows 需要特殊处理大小写敏感
          CASE_INSENSITIVE: ${{ matrix.platform == 'windows-latest' && '1' || '0' }}
      
      - name: Upload Artifacts
        if: ${{ steps.finder.outputs.files != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ env.UNIQUE_ID }}
          path: |
            ${{ steps.finder.outputs.files }}
          retention-days: 7

      - name: Create Comment
        if: |
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'main' && 
          steps.finder.outputs.paths != ''
        uses: actions/github-script@v7
        env:
          PLATFORM: ${{ matrix.platform }}
          RUN_ID: ${{ github.run_id }}
          ARTIFACT_NAME: ${{ matrix.platform }}-${{ env.UNIQUE_ID }}
        with:
          script: |
            const comment = `🎉 构建完成！资产已上传
            ### 平台: ${process.env.PLATFORM}
            📦 资源包名称: \`${process.env.ARTIFACT_NAME}\`
            🔗 下载地址: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.RUN_ID}/artifacts
            ⏱️ 构建时间: \`${new Date().toISOString()}\`
            
            包含以下文件：
            ${'${{ steps.finder.outputs.paths }}'.split('\n').map(p => `▫️ \`${p}\``).join('\n')}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
